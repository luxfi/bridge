// Protocol Buffers - Google's data interchange format
// Copyright 2008 Google Inc.  All rights reserved.
// https://developers.google.com/protocol-buffers/
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// Wrappers for primitive (non-message) types. These types are useful
// for embedding primitives in the `google.protobuf.Any` type and for places
// where we need to distinguish between the absence of a primitive
// typed field and its default value.
//
// These wrappers have no meaningful use within repeated fields as they lack
// the ability to detect presence on individual elements.
// These wrappers have no meaningful use within a map or a oneof since
// individual entries of a map or fields of a oneof can already detect presence.

// @generated by protoc-gen-es v2.2.2
// @generated from file google/protobuf/wrappers.proto (package google.protobuf, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file google/protobuf/wrappers.proto.
 */
export declare const file_google_protobuf_wrappers: GenFile;

/**
 * Wrapper message for `double`.
 *
 * The JSON representation for `DoubleValue` is JSON number.
 *
 * @generated from message google.protobuf.DoubleValue
 */
export declare type DoubleValue = Message<"google.protobuf.DoubleValue"> & {
  /**
   * The double value.
   *
   * @generated from field: double value = 1;
   */
  value: number;
};

/**
 * Describes the message google.protobuf.DoubleValue.
 * Use `create(DoubleValueSchema)` to create a new message.
 */
export declare const DoubleValueSchema: GenMessage<DoubleValue>;

/**
 * Wrapper message for `float`.
 *
 * The JSON representation for `FloatValue` is JSON number.
 *
 * @generated from message google.protobuf.FloatValue
 */
export declare type FloatValue = Message<"google.protobuf.FloatValue"> & {
  /**
   * The float value.
   *
   * @generated from field: float value = 1;
   */
  value: number;
};

/**
 * Describes the message google.protobuf.FloatValue.
 * Use `create(FloatValueSchema)` to create a new message.
 */
export declare const FloatValueSchema: GenMessage<FloatValue>;

/**
 * Wrapper message for `int64`.
 *
 * The JSON representation for `Int64Value` is JSON string.
 *
 * @generated from message google.protobuf.Int64Value
 */
export declare type Int64Value = Message<"google.protobuf.Int64Value"> & {
  /**
   * The int64 value.
   *
   * @generated from field: int64 value = 1;
   */
  value: bigint;
};

/**
 * Describes the message google.protobuf.Int64Value.
 * Use `create(Int64ValueSchema)` to create a new message.
 */
export declare const Int64ValueSchema: GenMessage<Int64Value>;

/**
 * Wrapper message for `uint64`.
 *
 * The JSON representation for `UInt64Value` is JSON string.
 *
 * @generated from message google.protobuf.UInt64Value
 */
export declare type UInt64Value = Message<"google.protobuf.UInt64Value"> & {
  /**
   * The uint64 value.
   *
   * @generated from field: uint64 value = 1;
   */
  value: bigint;
};

/**
 * Describes the message google.protobuf.UInt64Value.
 * Use `create(UInt64ValueSchema)` to create a new message.
 */
export declare const UInt64ValueSchema: GenMessage<UInt64Value>;

/**
 * Wrapper message for `int32`.
 *
 * The JSON representation for `Int32Value` is JSON number.
 *
 * @generated from message google.protobuf.Int32Value
 */
export declare type Int32Value = Message<"google.protobuf.Int32Value"> & {
  /**
   * The int32 value.
   *
   * @generated from field: int32 value = 1;
   */
  value: number;
};

/**
 * Describes the message google.protobuf.Int32Value.
 * Use `create(Int32ValueSchema)` to create a new message.
 */
export declare const Int32ValueSchema: GenMessage<Int32Value>;

/**
 * Wrapper message for `uint32`.
 *
 * The JSON representation for `UInt32Value` is JSON number.
 *
 * @generated from message google.protobuf.UInt32Value
 */
export declare type UInt32Value = Message<"google.protobuf.UInt32Value"> & {
  /**
   * The uint32 value.
   *
   * @generated from field: uint32 value = 1;
   */
  value: number;
};

/**
 * Describes the message google.protobuf.UInt32Value.
 * Use `create(UInt32ValueSchema)` to create a new message.
 */
export declare const UInt32ValueSchema: GenMessage<UInt32Value>;

/**
 * Wrapper message for `bool`.
 *
 * The JSON representation for `BoolValue` is JSON `true` and `false`.
 *
 * @generated from message google.protobuf.BoolValue
 */
export declare type BoolValue = Message<"google.protobuf.BoolValue"> & {
  /**
   * The bool value.
   *
   * @generated from field: bool value = 1;
   */
  value: boolean;
};

/**
 * Describes the message google.protobuf.BoolValue.
 * Use `create(BoolValueSchema)` to create a new message.
 */
export declare const BoolValueSchema: GenMessage<BoolValue>;

/**
 * Wrapper message for `string`.
 *
 * The JSON representation for `StringValue` is JSON string.
 *
 * @generated from message google.protobuf.StringValue
 */
export declare type StringValue = Message<"google.protobuf.StringValue"> & {
  /**
   * The string value.
   *
   * @generated from field: string value = 1;
   */
  value: string;
};

/**
 * Describes the message google.protobuf.StringValue.
 * Use `create(StringValueSchema)` to create a new message.
 */
export declare const StringValueSchema: GenMessage<StringValue>;

/**
 * Wrapper message for `bytes`.
 *
 * The JSON representation for `BytesValue` is JSON string.
 *
 * @generated from message google.protobuf.BytesValue
 */
export declare type BytesValue = Message<"google.protobuf.BytesValue"> & {
  /**
   * The bytes value.
   *
   * @generated from field: bytes value = 1;
   */
  value: Uint8Array;
};

/**
 * Describes the message google.protobuf.BytesValue.
 * Use `create(BytesValueSchema)` to create a new message.
 */
export declare const BytesValueSchema: GenMessage<BytesValue>;

