// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file utila/api/v1alpha2/transactiondef.proto (package utila.api.v1alpha2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_field_behavior } from "../../../google/api/field_behavior_pb";
import { file_google_api_resource } from "../../../google/api/resource_pb";
import { file_google_api_visibility } from "../../../google/api/visibility_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_descriptor, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_protoc_gen_openapiv2_options_annotations } from "../../../protoc-gen-openapiv2/options/annotations_pb";
import type { TransactionState_Enum, TransactionSubType_Enum, TransactionType_Enum } from "../v1/transactions_pb";
import { file_utila_api_v1_transactions } from "../v1/transactions_pb";
import type { ConvertedValue } from "./types_pb";
import { file_utila_api_v1alpha2_types } from "./types_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file utila/api/v1alpha2/transactiondef.proto.
 */
export const file_utila_api_v1alpha2_transactiondef: GenFile = /*@__PURE__*/
  fileDesc("Cid1dGlsYS9hcGkvdjFhbHBoYTIvdHJhbnNhY3Rpb25kZWYucHJvdG8SEnV0aWxhLmFwaS52MWFscGhhMiLAFwoLVHJhbnNhY3Rpb24SaAoEbmFtZRgBIAEoCUJakkFTSi8idmF1bHRzLzFiMjU2MzVhNWIzZi90cmFuc2FjdGlvbnMvOTUyNTdjNWE1MjJmIso+H/oCHG5hbWU9dmF1bHRzLyovdHJhbnNhY3Rpb25zLyriQQEDEjYKBHR5cGUYAiABKA4yIi51dGlsYS5hcGkudjEuVHJhbnNhY3Rpb25UeXBlLkVudW1CBOJBAQMSPQoIc3ViX3R5cGUYAyABKA4yJS51dGlsYS5hcGkudjEuVHJhbnNhY3Rpb25TdWJUeXBlLkVudW1CBOJBAQMSOAoFc3RhdGUYBCABKA4yIy51dGlsYS5hcGkudjEuVHJhbnNhY3Rpb25TdGF0ZS5FbnVtQgTiQQEDEgwKBG5vdGUYBSABKAkSTwoHbmV0d29yaxgGIAEoCUI5kkEdShsibmV0d29ya3MvZXRoZXJldW0tbWFpbm5ldCL6QRYKFGFwaS51dGlsYS5pby9OZXR3b3JrSACIAQESEQoEaGFzaBgIIAEoCUgBiAEBEkMKB3JlcXVlc3QYByABKAsyMi51dGlsYS5hcGkudjFhbHBoYTIuVHJhbnNhY3Rpb24uVHJhbnNhY3Rpb25SZXF1ZXN0EjsKCXRyYW5zZmVycxgbIAMoCzIoLnV0aWxhLmFwaS52MWFscGhhMi5UcmFuc2FjdGlvbi5UcmFuc2ZlchJIChB0b2tlbl9hbGxvd2FuY2VzGBwgAygLMi4udXRpbGEuYXBpLnYxYWxwaGEyLlRyYW5zYWN0aW9uLlRva2VuQWxsb3dhbmNlEkcKD2V2bV90cmFuc2FjdGlvbhhkIAEoCzIuLnV0aWxhLmFwaS52MWFscGhhMi5UcmFuc2FjdGlvbi5FVk1UcmFuc2FjdGlvbhI/Cgtldm1fbWVzc2FnZRhlIAEoCzIqLnV0aWxhLmFwaS52MWFscGhhMi5UcmFuc2FjdGlvbi5FVk1NZXNzYWdlEkcKD2J0Y190cmFuc2FjdGlvbhhmIAEoCzIuLnV0aWxhLmFwaS52MWFscGhhMi5UcmFuc2FjdGlvbi5CVENUcmFuc2FjdGlvbhI2CgtjcmVhdGVfdGltZRjIASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgTiQQEDGs4BChJUcmFuc2FjdGlvblJlcXVlc3QSUAoJaW5pdGlhdG9yGAEgASgJQj2SQSRKECJ1c2Vycy8yZDJlNDByMyLKPg/6AgxuYW1lPXVzZXJzLyr6QRMKEWFwaS51dGlsYS5pby9Vc2VyElwKDXNvdXJjZV93YWxsZXQYAiABKAlCQ5JBKEoSIndhbGxldHMvMmQyZTQwcjMiyj4R+gIObmFtZT13YWxsZXRzLyr6QRUKE2FwaS51dGlsYS5pby9XYWxsZXRIAEIICgZzb3VyY2UavwIKCFRyYW5zZmVyEjMKDnNvdXJjZV9hZGRyZXNzGAsgASgLMhsudXRpbGEuYXBpLnYxYWxwaGEyLkFkZHJlc3MSOAoTZGVzdGluYXRpb25fYWRkcmVzcxgMIAEoCzIbLnV0aWxhLmFwaS52MWFscGhhMi5BZGRyZXNzEg4KBmFtb3VudBgDIAEoCRJeCgVhc3NldBgEIAEoCUJPkkE1SiAiYXNzZXRzL25hdGl2ZS5ldGhlcmV1bS1tYWlubmV0Iso+EPoCDW5hbWU9YXNzZXRzLyr6QRQKEmFwaS51dGlsYS5pby9Bc3NldBI4CgxtaW5pbmdfcHJpY2UYBiABKAsyIi51dGlsYS5hcGkudjFhbHBoYTIuQ29udmVydGVkVmFsdWUSEQoEbm90ZRgHIAEoCUgAiAEBQgcKBV9ub3RlGqcCCg5Ub2tlbkFsbG93YW5jZRI1ChBhcHByb3Zlcl9hZGRyZXNzGAEgASgLMhsudXRpbGEuYXBpLnYxYWxwaGEyLkFkZHJlc3MSNAoPc3BlbmRlcl9hZGRyZXNzGAIgASgLMhsudXRpbGEuYXBpLnYxYWxwaGEyLkFkZHJlc3MSXgoFYXNzZXQYAyABKAlCT5JBNUogImFzc2V0cy9uYXRpdmUuZXRoZXJldW0tbWFpbm5ldCLKPhD6Ag1uYW1lPWFzc2V0cy8q+kEUChJhcGkudXRpbGEuaW8vQXNzZXQSDgoGYW1vdW50GAQgASgJEjgKDG1pbmluZ19wcmljZRgGIAEoCzIiLnV0aWxhLmFwaS52MWFscGhhMi5Db252ZXJ0ZWRWYWx1ZRreAQoORVZNVHJhbnNhY3Rpb24SMQoMZnJvbV9hZGRyZXNzGAIgASgLMhsudXRpbGEuYXBpLnYxYWxwaGEyLkFkZHJlc3MSLwoKdG9fYWRkcmVzcxgDIAEoCzIbLnV0aWxhLmFwaS52MWFscGhhMi5BZGRyZXNzEg0KBXZhbHVlGAQgASgJEiUKBGRhdGEYBSABKAlCF5JBFEoSIjB4ZGE4MmZiNGMwMDAwMGEiEjIKA2ZlZRgGIAEoCzIlLnV0aWxhLmFwaS52MWFscGhhMi5FVk1UcmFuc2FjdGlvbkdhcxrYAQoKRVZNTWVzc2FnZRJCCgR0eXBlGAEgASgOMjQudXRpbGEuYXBpLnYxYWxwaGEyLlRyYW5zYWN0aW9uLkVWTU1lc3NhZ2UuVHlwZS5FbnVtEg8KB21lc3NhZ2UYAiABKAkSFgoJc2lnbmF0dXJlGAMgASgMSACIAQEaTwoEVHlwZSJHCgRFbnVtEhQKEEVOVU1fVU5TUEVDSUZJRUQQABIRCg1QRVJTT05BTF9TSUdOEAESFgoSU0lHTl9UWVBFRF9EQVRBX1Y0EAJCDAoKX3NpZ25hdHVyZRqdAwoOQlRDVHJhbnNhY3Rpb24SRQoGaW5wdXRzGAMgAygLMjUudXRpbGEuYXBpLnYxYWxwaGEyLlRyYW5zYWN0aW9uLkJUQ1RyYW5zYWN0aW9uLlVUWE9JbhJHCgdvdXRwdXRzGAQgAygLMjYudXRpbGEuYXBpLnYxYWxwaGEyLlRyYW5zYWN0aW9uLkJUQ1RyYW5zYWN0aW9uLlVUWE9PdXQSCwoDZmVlGAUgASgJEl0KBWFzc2V0GAYgASgJQk6SQTRKHyJhc3NldHMvbmF0aXZlLmJpdGNvaW4tbWFpbm5ldCLKPhD6Ag1uYW1lPWFzc2V0cy8q+kEUChJhcGkudXRpbGEuaW8vQXNzZXQaRgoGVVRYT0luEiwKB2FkZHJlc3MYASABKAsyGy51dGlsYS5hcGkudjFhbHBoYTIuQWRkcmVzcxIOCgZhbW91bnQYAiABKAkaRwoHVVRYT091dBIsCgdhZGRyZXNzGAEgASgLMhsudXRpbGEuYXBpLnYxYWxwaGEyLkFkZHJlc3MSDgoGYW1vdW50GAIgASgJGrkCCgVVdGlsYRIbCg5leHRlbnNpb25faW5mbxgBIAEoCUgAiAEBEkkKDXBvbGljeV9yZXN1bHQYAiABKAsyMi51dGlsYS5hcGkudjFhbHBoYTIuVHJhbnNhY3Rpb24uVXRpbGEuUG9saWN5UmVzdWx0Ek0KDmVuY29kZWRfc29sX3R4GAMgASgLMjUudXRpbGEuYXBpLnYxYWxwaGEyLlRyYW5zYWN0aW9uLlV0aWxhLkVuY29kZWRTb2xhbmFUeBpDCgxQb2xpY3lSZXN1bHQSGQoRYWxsb3dpbmdfcnVsZV9pZHMYASADKAkSGAoQZGVueWluZ19ydWxlX2lkcxgCIAMoCRohCg9FbmNvZGVkU29sYW5hVHgSDgoGYmFzZTU4GAEgASgJQhEKD19leHRlbnNpb25faW5mbzpj6kFgChhhcGkudXRpbGEuaW8vVHJhbnNhY3Rpb24SKXZhdWx0cy97dmF1bHR9L3RyYW5zYWN0aW9ucy97dHJhbnNhY3Rpb259Kgx0cmFuc2FjdGlvbnMyC3RyYW5zYWN0aW9uQgoKCF9uZXR3b3JrQgcKBV9oYXNoIpECChFFVk1UcmFuc2FjdGlvbkdhcxIcCglnYXNfbGltaXQYASABKANCBOJBAQFIAIgBARIVCghnYXNfdXNlZBgFIAEoCUgBiAEBEhwKCWdhc19wcmljZRgCIAEoCUIE4kEBAUgCiAEBEisKGG1heF9wcmlvcml0eV9mZWVfcGVyX2dhcxgDIAEoCUIE4kEBAUgDiAEBEiIKD21heF9mZWVfcGVyX2dhcxgEIAEoCUIE4kEBAUgEiAEBQgwKCl9nYXNfbGltaXRCCwoJX2dhc191c2VkQgwKCl9nYXNfcHJpY2VCGwoZX21heF9wcmlvcml0eV9mZWVfcGVyX2dhc0ISChBfbWF4X2ZlZV9wZXJfZ2FzImIKB0FkZHJlc3MSDQoFdmFsdWUYASABKAkSOwoIaW5mb19yZWYYAiABKAlCJPpBIQofYXBpLnV0aWxhLmlvL05ldHdvcmtBZGRyZXNzSW5mb0gAiAEBQgsKCV9pbmZvX3JlZkIqWih1dGlsYS5pby9nZW5wcm90by9hcGkvdjFhbHBoYTI7YXBpdjFhMnBiYgZwcm90bzM", [file_google_api_field_behavior, file_google_api_resource, file_google_api_visibility, file_google_protobuf_descriptor, file_google_protobuf_timestamp, file_protoc_gen_openapiv2_options_annotations, file_utila_api_v1_transactions, file_utila_api_v1alpha2_types]);

/**
 * @generated from message utila.api.v1alpha2.Transaction
 */
export type Transaction = Message<"utila.api.v1alpha2.Transaction"> & {
  /**
   * The resource name of the transaction.
   *
   * Format: `vaults/{vault_id}/transactions/{transaction_id}`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: utila.api.v1.TransactionType.Enum type = 2;
   */
  type: TransactionType_Enum;

  /**
   * @generated from field: utila.api.v1.TransactionSubType.Enum sub_type = 3;
   */
  subType: TransactionSubType_Enum;

  /**
   * @generated from field: utila.api.v1.TransactionState.Enum state = 4;
   */
  state: TransactionState_Enum;

  /**
   * A note to attach to the transaction.
   *
   * This note is visible to all vault members
   *
   * @generated from field: string note = 5;
   */
  note: string;

  /**
   * The blockchain network on which the transaction was sent.
   *
   * Not available for connection transactions (e.g., Exchanges)
   *
   * Format: `networks/{network_id}`
   *
   * @generated from field: optional string network = 6;
   */
  network?: string;

  /**
   * For on-chain transactions, the hash of the transaction.
   *
   * @generated from field: optional string hash = 8;
   */
  hash?: string;

  /**
   * The request details of the transaction. Relevant only for transactions initiated through Utila.
   *
   * @generated from field: utila.api.v1alpha2.Transaction.TransactionRequest request = 7;
   */
  request?: Transaction_TransactionRequest;

  /**
   * If there one or more transfers in the transaction, they will be listed here.
   *
   * @generated from field: repeated utila.api.v1alpha2.Transaction.Transfer transfers = 27;
   */
  transfers: Transaction_Transfer[];

  /**
   * If there one or more token allowances in the transaction, they will be listed here.
   *
   * @generated from field: repeated utila.api.v1alpha2.Transaction.TokenAllowance token_allowances = 28;
   */
  tokenAllowances: Transaction_TokenAllowance[];

  /**
   * For EVM-Compatible transaction: Low level transaction details.
   *
   * @generated from field: utila.api.v1alpha2.Transaction.EVMTransaction evm_transaction = 100;
   */
  evmTransaction?: Transaction_EVMTransaction;

  /**
   * If this is an EVM message, the message will be listed here.
   *
   * @generated from field: utila.api.v1alpha2.Transaction.EVMMessage evm_message = 101;
   */
  evmMessage?: Transaction_EVMMessage;

  /**
   * For BTC transaction: Low level transaction details.
   *
   * @generated from field: utila.api.v1alpha2.Transaction.BTCTransaction btc_transaction = 102;
   */
  btcTransaction?: Transaction_BTCTransaction;

  /**
   * The time at which the transaction was created in the system.
   *
   * @generated from field: google.protobuf.Timestamp create_time = 200;
   */
  createTime?: Timestamp;
};

/**
 * Describes the message utila.api.v1alpha2.Transaction.
 * Use `create(TransactionSchema)` to create a new message.
 */
export const TransactionSchema: GenMessage<Transaction> = /*@__PURE__*/
  messageDesc(file_utila_api_v1alpha2_transactiondef, 0);

/**
 * @generated from message utila.api.v1alpha2.Transaction.TransactionRequest
 */
export type Transaction_TransactionRequest = Message<"utila.api.v1alpha2.Transaction.TransactionRequest"> & {
  /**
   * The initiator of the transaction.
   *
   * Format: `users/{user}`
   *
   * @generated from field: string initiator = 1;
   */
  initiator: string;

  /**
   * @generated from oneof utila.api.v1alpha2.Transaction.TransactionRequest.source
   */
  source: {
    /**
     * If the transaction was initiated through a wallet, the wallet will be listed here.
     *
     * @generated from field: string source_wallet = 2;
     */
    value: string;
    case: "sourceWallet";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message utila.api.v1alpha2.Transaction.TransactionRequest.
 * Use `create(Transaction_TransactionRequestSchema)` to create a new message.
 */
export const Transaction_TransactionRequestSchema: GenMessage<Transaction_TransactionRequest> = /*@__PURE__*/
  messageDesc(file_utila_api_v1alpha2_transactiondef, 0, 0);

/**
 * @generated from message utila.api.v1alpha2.Transaction.Transfer
 */
export type Transaction_Transfer = Message<"utila.api.v1alpha2.Transaction.Transfer"> & {
  /**
   * Transfer source address. Not populated for BTC transactions.
   *
   * @generated from field: utila.api.v1alpha2.Address source_address = 11;
   */
  sourceAddress?: Address;

  /**
   * Transfer destination address.
   *
   * @generated from field: utila.api.v1alpha2.Address destination_address = 12;
   */
  destinationAddress?: Address;

  /**
   * Amount of the transfer.
   *
   * @generated from field: string amount = 3;
   */
  amount: string;

  /**
   * Asset name.
   *
   * @generated from field: string asset = 4;
   */
  asset: string;

  /**
   * The price of the asset at the time of the mining.
   *
   * @generated from field: utila.api.v1alpha2.ConvertedValue mining_price = 6;
   */
  miningPrice?: ConvertedValue;

  /**
   * An optional note to attach to the specific transfer (possible for batch transfers).
   *
   * @generated from field: optional string note = 7;
   */
  note?: string;
};

/**
 * Describes the message utila.api.v1alpha2.Transaction.Transfer.
 * Use `create(Transaction_TransferSchema)` to create a new message.
 */
export const Transaction_TransferSchema: GenMessage<Transaction_Transfer> = /*@__PURE__*/
  messageDesc(file_utila_api_v1alpha2_transactiondef, 0, 1);

/**
 * @generated from message utila.api.v1alpha2.Transaction.TokenAllowance
 */
export type Transaction_TokenAllowance = Message<"utila.api.v1alpha2.Transaction.TokenAllowance"> & {
  /**
   * The address of the approver.
   *
   * @generated from field: utila.api.v1alpha2.Address approver_address = 1;
   */
  approverAddress?: Address;

  /**
   * The address of the spender.
   *
   * @generated from field: utila.api.v1alpha2.Address spender_address = 2;
   */
  spenderAddress?: Address;

  /**
   * The asset to approve.
   *
   * @generated from field: string asset = 3;
   */
  asset: string;

  /**
   * The amount to approve (allowance) in asset units.
   *
   * Example: `1.1`.
   *
   * @generated from field: string amount = 4;
   */
  amount: string;

  /**
   * The price of the asset at the time of the mining.
   *
   * @generated from field: utila.api.v1alpha2.ConvertedValue mining_price = 6;
   */
  miningPrice?: ConvertedValue;
};

/**
 * Describes the message utila.api.v1alpha2.Transaction.TokenAllowance.
 * Use `create(Transaction_TokenAllowanceSchema)` to create a new message.
 */
export const Transaction_TokenAllowanceSchema: GenMessage<Transaction_TokenAllowance> = /*@__PURE__*/
  messageDesc(file_utila_api_v1alpha2_transactiondef, 0, 2);

/**
 * @generated from message utila.api.v1alpha2.Transaction.EVMTransaction
 */
export type Transaction_EVMTransaction = Message<"utila.api.v1alpha2.Transaction.EVMTransaction"> & {
  /**
   * The source of the transfer. A `0x`-prefixed hex string address.
   * (-- api-linter: core::0140::prepositions=disabled
   *     aip.dev/not-precedent: `from` is a popular term in EVM APIs. --)
   *
   * @generated from field: utila.api.v1alpha2.Address from_address = 2;
   */
  fromAddress?: Address;

  /**
   * The destination of the transfer. A `0x`-prefixed hex string address.
   * (-- api-linter: core::0140::prepositions=disabled
   *     aip.dev/not-precedent: `to` is a popular term in EVM APIs. --)
   *
   * @generated from field: utila.api.v1alpha2.Address to_address = 3;
   */
  toAddress?: Address;

  /**
   * The amount to transfer in wei.
   *
   * @generated from field: string value = 4;
   */
  value: string;

  /**
   * Hex encoded transaction data.
   *
   * Example: `0xda82fb4c00000a` or `da82fb4c00000a`.
   *
   * @generated from field: string data = 5;
   */
  data: string;

  /**
   * The fee details of the transaction.
   *
   * @generated from field: utila.api.v1alpha2.EVMTransactionGas fee = 6;
   */
  fee?: EVMTransactionGas;
};

/**
 * Describes the message utila.api.v1alpha2.Transaction.EVMTransaction.
 * Use `create(Transaction_EVMTransactionSchema)` to create a new message.
 */
export const Transaction_EVMTransactionSchema: GenMessage<Transaction_EVMTransaction> = /*@__PURE__*/
  messageDesc(file_utila_api_v1alpha2_transactiondef, 0, 3);

/**
 * @generated from message utila.api.v1alpha2.Transaction.EVMMessage
 */
export type Transaction_EVMMessage = Message<"utila.api.v1alpha2.Transaction.EVMMessage"> & {
  /**
   * The type of the message.
   *
   * @generated from field: utila.api.v1alpha2.Transaction.EVMMessage.Type.Enum type = 1;
   */
  type: Transaction_EVMMessage_Type_Enum;

  /**
   * The payload of the message as a plain UTF-8 string.
   *
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * ECDSA signature (65 bytes) of the message.
   *
   * @generated from field: optional bytes signature = 3;
   */
  signature?: Uint8Array;
};

/**
 * Describes the message utila.api.v1alpha2.Transaction.EVMMessage.
 * Use `create(Transaction_EVMMessageSchema)` to create a new message.
 */
export const Transaction_EVMMessageSchema: GenMessage<Transaction_EVMMessage> = /*@__PURE__*/
  messageDesc(file_utila_api_v1alpha2_transactiondef, 0, 4);

/**
 * Type
 *
 * @generated from message utila.api.v1alpha2.Transaction.EVMMessage.Type
 */
export type Transaction_EVMMessage_Type = Message<"utila.api.v1alpha2.Transaction.EVMMessage.Type"> & {
};

/**
 * Describes the message utila.api.v1alpha2.Transaction.EVMMessage.Type.
 * Use `create(Transaction_EVMMessage_TypeSchema)` to create a new message.
 */
export const Transaction_EVMMessage_TypeSchema: GenMessage<Transaction_EVMMessage_Type> = /*@__PURE__*/
  messageDesc(file_utila_api_v1alpha2_transactiondef, 0, 4, 0);

/**
 * Enum
 *
 * @generated from enum utila.api.v1alpha2.Transaction.EVMMessage.Type.Enum
 */
export enum Transaction_EVMMessage_Type_Enum {
  /**
   * Unspecified message type. This value is not used.
   *
   * @generated from enum value: ENUM_UNSPECIFIED = 0;
   */
  ENUM_UNSPECIFIED = 0,

  /**
   * A simple personal sign message.
   *
   * @generated from enum value: PERSONAL_SIGN = 1;
   */
  PERSONAL_SIGN = 1,

  /**
   * A structured message as defined by EIP-712. See https://eips.ethereum.org/EIPS/eip-712 for more information.
   *
   * @generated from enum value: SIGN_TYPED_DATA_V4 = 2;
   */
  SIGN_TYPED_DATA_V4 = 2,
}

/**
 * Describes the enum utila.api.v1alpha2.Transaction.EVMMessage.Type.Enum.
 */
export const Transaction_EVMMessage_Type_EnumSchema: GenEnum<Transaction_EVMMessage_Type_Enum> = /*@__PURE__*/
  enumDesc(file_utila_api_v1alpha2_transactiondef, 0, 4, 0, 0);

/**
 * @generated from message utila.api.v1alpha2.Transaction.BTCTransaction
 */
export type Transaction_BTCTransaction = Message<"utila.api.v1alpha2.Transaction.BTCTransaction"> & {
  /**
   * Transaction inputs.
   *
   * @generated from field: repeated utila.api.v1alpha2.Transaction.BTCTransaction.UTXOIn inputs = 3;
   */
  inputs: Transaction_BTCTransaction_UTXOIn[];

  /**
   * Transaction outputs.
   *
   * @generated from field: repeated utila.api.v1alpha2.Transaction.BTCTransaction.UTXOOut outputs = 4;
   */
  outputs: Transaction_BTCTransaction_UTXOOut[];

  /**
   * Transaction fee in asset unit (BTC).
   *
   * @generated from field: string fee = 5;
   */
  fee: string;

  /**
   * Asset name.
   *
   * @generated from field: string asset = 6;
   */
  asset: string;
};

/**
 * Describes the message utila.api.v1alpha2.Transaction.BTCTransaction.
 * Use `create(Transaction_BTCTransactionSchema)` to create a new message.
 */
export const Transaction_BTCTransactionSchema: GenMessage<Transaction_BTCTransaction> = /*@__PURE__*/
  messageDesc(file_utila_api_v1alpha2_transactiondef, 0, 5);

/**
 * @generated from message utila.api.v1alpha2.Transaction.BTCTransaction.UTXOIn
 */
export type Transaction_BTCTransaction_UTXOIn = Message<"utila.api.v1alpha2.Transaction.BTCTransaction.UTXOIn"> & {
  /**
   * Input address.
   *
   * @generated from field: utila.api.v1alpha2.Address address = 1;
   */
  address?: Address;

  /**
   * Amount in asset unit (BTC).
   *
   * @generated from field: string amount = 2;
   */
  amount: string;
};

/**
 * Describes the message utila.api.v1alpha2.Transaction.BTCTransaction.UTXOIn.
 * Use `create(Transaction_BTCTransaction_UTXOInSchema)` to create a new message.
 */
export const Transaction_BTCTransaction_UTXOInSchema: GenMessage<Transaction_BTCTransaction_UTXOIn> = /*@__PURE__*/
  messageDesc(file_utila_api_v1alpha2_transactiondef, 0, 5, 0);

/**
 * @generated from message utila.api.v1alpha2.Transaction.BTCTransaction.UTXOOut
 */
export type Transaction_BTCTransaction_UTXOOut = Message<"utila.api.v1alpha2.Transaction.BTCTransaction.UTXOOut"> & {
  /**
   * Output address.
   *
   * @generated from field: utila.api.v1alpha2.Address address = 1;
   */
  address?: Address;

  /**
   * Amount in asset unit (BTC).
   *
   * @generated from field: string amount = 2;
   */
  amount: string;
};

/**
 * Describes the message utila.api.v1alpha2.Transaction.BTCTransaction.UTXOOut.
 * Use `create(Transaction_BTCTransaction_UTXOOutSchema)` to create a new message.
 */
export const Transaction_BTCTransaction_UTXOOutSchema: GenMessage<Transaction_BTCTransaction_UTXOOut> = /*@__PURE__*/
  messageDesc(file_utila_api_v1alpha2_transactiondef, 0, 5, 1);

/**
 * @generated from message utila.api.v1alpha2.Transaction.Utila
 */
export type Transaction_Utila = Message<"utila.api.v1alpha2.Transaction.Utila"> & {
  /**
   * DApp information for internal use.
   *
   * @generated from field: optional string extension_info = 1;
   */
  extensionInfo?: string;

  /**
   * @generated from field: utila.api.v1alpha2.Transaction.Utila.PolicyResult policy_result = 2;
   */
  policyResult?: Transaction_Utila_PolicyResult;

  /**
   * @generated from field: utila.api.v1alpha2.Transaction.Utila.EncodedSolanaTx encoded_sol_tx = 3;
   */
  encodedSolTx?: Transaction_Utila_EncodedSolanaTx;
};

/**
 * Describes the message utila.api.v1alpha2.Transaction.Utila.
 * Use `create(Transaction_UtilaSchema)` to create a new message.
 */
export const Transaction_UtilaSchema: GenMessage<Transaction_Utila> = /*@__PURE__*/
  messageDesc(file_utila_api_v1alpha2_transactiondef, 0, 6);

/**
 * @generated from message utila.api.v1alpha2.Transaction.Utila.PolicyResult
 */
export type Transaction_Utila_PolicyResult = Message<"utila.api.v1alpha2.Transaction.Utila.PolicyResult"> & {
  /**
   * @generated from field: repeated string allowing_rule_ids = 1;
   */
  allowingRuleIds: string[];

  /**
   * @generated from field: repeated string denying_rule_ids = 2;
   */
  denyingRuleIds: string[];
};

/**
 * Describes the message utila.api.v1alpha2.Transaction.Utila.PolicyResult.
 * Use `create(Transaction_Utila_PolicyResultSchema)` to create a new message.
 */
export const Transaction_Utila_PolicyResultSchema: GenMessage<Transaction_Utila_PolicyResult> = /*@__PURE__*/
  messageDesc(file_utila_api_v1alpha2_transactiondef, 0, 6, 0);

/**
 * @generated from message utila.api.v1alpha2.Transaction.Utila.EncodedSolanaTx
 */
export type Transaction_Utila_EncodedSolanaTx = Message<"utila.api.v1alpha2.Transaction.Utila.EncodedSolanaTx"> & {
  /**
   * The base58 encoded transaction.
   *
   * @generated from field: string base58 = 1;
   */
  base58: string;
};

/**
 * Describes the message utila.api.v1alpha2.Transaction.Utila.EncodedSolanaTx.
 * Use `create(Transaction_Utila_EncodedSolanaTxSchema)` to create a new message.
 */
export const Transaction_Utila_EncodedSolanaTxSchema: GenMessage<Transaction_Utila_EncodedSolanaTx> = /*@__PURE__*/
  messageDesc(file_utila_api_v1alpha2_transactiondef, 0, 6, 1);

/**
 * @generated from message utila.api.v1alpha2.EVMTransactionGas
 */
export type EVMTransactionGas = Message<"utila.api.v1alpha2.EVMTransactionGas"> & {
  /**
   * The amount of gas to use for the transaction.
   *
   * @generated from field: optional int64 gas_limit = 1;
   */
  gasLimit?: bigint;

  /**
   * The amount of gas used by the transaction.
   *
   * @generated from field: optional string gas_used = 5;
   */
  gasUsed?: string;

  /**
   * A `0x`-prefixed hex string representing the gas price of the transaction.
   *
   * Used for legacy transactions (non EIP-1559).
   *
   * @generated from field: optional string gas_price = 2;
   */
  gasPrice?: string;

  /**
   * A `0x`-prefixed hex string representing the maximum prioriy fee per gas unit the transaction can pay.
   *
   * Used for dynamic transactions (EIP-1559).
   *
   * @generated from field: optional string max_priority_fee_per_gas = 3;
   */
  maxPriorityFeePerGas?: string;

  /**
   * A `0x`-prefixed hex string representing the maximum fee per gas unit the transaction can pay.
   *
   * Used for dynamic transactions (EIP-1559).
   *
   * @generated from field: optional string max_fee_per_gas = 4;
   */
  maxFeePerGas?: string;
};

/**
 * Describes the message utila.api.v1alpha2.EVMTransactionGas.
 * Use `create(EVMTransactionGasSchema)` to create a new message.
 */
export const EVMTransactionGasSchema: GenMessage<EVMTransactionGas> = /*@__PURE__*/
  messageDesc(file_utila_api_v1alpha2_transactiondef, 1);

/**
 * @generated from message utila.api.v1alpha2.Address
 */
export type Address = Message<"utila.api.v1alpha2.Address"> & {
  /**
   * The actual address.
   *
   * @generated from field: string value = 1;
   */
  value: string;

  /**
   * If it's an address in the vault (e.g., a wallet address), a reference to address information will be listed here.
   * Address information can be fetched from `ReferencedAddressesInfo` map with the reference as the key.
   *
   * Will be populated only if `includeReferencedResources` is set to `true`.
   *
   * @generated from field: optional string info_ref = 2;
   */
  infoRef?: string;
};

/**
 * Describes the message utila.api.v1alpha2.Address.
 * Use `create(AddressSchema)` to create a new message.
 */
export const AddressSchema: GenMessage<Address> = /*@__PURE__*/
  messageDesc(file_utila_api_v1alpha2_transactiondef, 2);

