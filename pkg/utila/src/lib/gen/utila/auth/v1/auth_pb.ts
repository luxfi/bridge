// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file utila/auth/v1/auth.proto (package utila.auth.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { UserDevice } from "../../api/v1/api_pb";
import { file_utila_api_v1_api } from "../../api/v1/api_pb";
import type { EncryptionDetails } from "../../api/v1/user_backup_pb";
import { file_utila_api_v1_user_backup } from "../../api/v1/user_backup_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file utila/auth/v1/auth.proto.
 */
export const file_utila_auth_v1_auth: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_protobuf_timestamp, file_utila_api_v1_api, file_utila_api_v1_user_backup]);

/**
 * @generated from message utila.auth.v1.BeginWebAuthnFlowRequest
 */
export type BeginWebAuthnFlowRequest = Message<"utila.auth.v1.BeginWebAuthnFlowRequest"> & {
};

/**
 * Describes the message utila.auth.v1.BeginWebAuthnFlowRequest.
 * Use `create(BeginWebAuthnFlowRequestSchema)` to create a new message.
 */
export const BeginWebAuthnFlowRequestSchema: GenMessage<BeginWebAuthnFlowRequest> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 0);

/**
 * @generated from message utila.auth.v1.BeginWebAuthnFlowResponse
 */
export type BeginWebAuthnFlowResponse = Message<"utila.auth.v1.BeginWebAuthnFlowResponse"> & {
  /**
   * The session ID to be used in FinishWebAuthnFlow for identifying the session of the flow.
   *
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * Whether the flow is a registration flow or a login flow.
   *
   * @generated from field: bool register = 2;
   */
  register: boolean;

  /**
   * JSON to be passed to navigator.credentials.create or navigator.credentials.get.
   * The JSON is different depending on whether the flow is a registration flow or a login flow.
   * For registration flow, the JSON mainly contains the parameters for the authenticator
   * (attestation and public key params), the challenge and info about the user and the relying party.
   * credential_options_request_json is a the options to be passed for platform authenticators.
   * cross_platform_credential_options_response_json is the options to be passed for cross-platform authenticators.
   * https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/create#publickey_object_structure
   * For login flow, the JSON mainly contains the challenge and parameters for the credential manager,
   * the challenge and info about the relying party.
   * credential_options_request_json is a the options to be used.
   * cross_platform_credential_options_response_json is not used.
   * https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/get#publickey_object_structure
   *
   * @generated from field: string credential_options_request_json = 3;
   */
  credentialOptionsRequestJson: string;

  /**
   * @generated from field: string cross_platform_credential_options_response_json = 5;
   */
  crossPlatformCredentialOptionsResponseJson: string;

  /**
   * The suggested name for friendly name to be used for the credential, relvant only for the registration flow.
   *
   * @generated from field: string suggested_credential_name = 4;
   */
  suggestedCredentialName: string;
};

/**
 * Describes the message utila.auth.v1.BeginWebAuthnFlowResponse.
 * Use `create(BeginWebAuthnFlowResponseSchema)` to create a new message.
 */
export const BeginWebAuthnFlowResponseSchema: GenMessage<BeginWebAuthnFlowResponse> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 1);

/**
 * @generated from message utila.auth.v1.FinishWebAuthnFlowRequest
 */
export type FinishWebAuthnFlowRequest = Message<"utila.auth.v1.FinishWebAuthnFlowRequest"> & {
  /**
   * The ID of the session, as returned by BeginWebAuthnFlow.
   *
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * The JSON returned by navigator.credentials.create or navigator.credentials.get.
   * For registration flow, the JSON mainly contains the signed challenge,
   * the public key and the authenticator's attestation.
   * For login flow, the JSON mainly contains the signed challenge.
   * https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential
   *
   * @generated from field: string credential_options_response_json = 2;
   */
  credentialOptionsResponseJson: string;

  /**
   * The friendly name to be used for the credential, relvant only for the registration flow.
   *
   * @generated from field: string credential_name = 3;
   */
  credentialName: string;
};

/**
 * Describes the message utila.auth.v1.FinishWebAuthnFlowRequest.
 * Use `create(FinishWebAuthnFlowRequestSchema)` to create a new message.
 */
export const FinishWebAuthnFlowRequestSchema: GenMessage<FinishWebAuthnFlowRequest> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 2);

/**
 * @generated from message utila.auth.v1.FinishWebAuthnFlowResponse
 */
export type FinishWebAuthnFlowResponse = Message<"utila.auth.v1.FinishWebAuthnFlowResponse"> & {
  /**
   * The JWT to be returned to Auth0, to verify that the user has successfully completed the flow.
   *
   * @generated from field: string mfa_jwt = 1;
   */
  mfaJwt: string;
};

/**
 * Describes the message utila.auth.v1.FinishWebAuthnFlowResponse.
 * Use `create(FinishWebAuthnFlowResponseSchema)` to create a new message.
 */
export const FinishWebAuthnFlowResponseSchema: GenMessage<FinishWebAuthnFlowResponse> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 3);

/**
 * @generated from message utila.auth.v1.GetUserInfoForMFARequest
 */
export type GetUserInfoForMFARequest = Message<"utila.auth.v1.GetUserInfoForMFARequest"> & {
  /**
   * A fingerprint of a device's public key to check whether it is set up for the user.
   * Relevant for devices.
   *
   * @generated from field: optional string fingerprint = 1;
   */
  fingerprint?: string;

  /**
   * Whether to include the backup hint and encryption details.
   * Relevant for devices.
   *
   * @generated from field: bool include_backup_info = 2;
   */
  includeBackupInfo: boolean;
};

/**
 * Describes the message utila.auth.v1.GetUserInfoForMFARequest.
 * Use `create(GetUserInfoForMFARequestSchema)` to create a new message.
 */
export const GetUserInfoForMFARequestSchema: GenMessage<GetUserInfoForMFARequest> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 4);

/**
 * @generated from message utila.auth.v1.GetUserInfoForMFAResponse
 */
export type GetUserInfoForMFAResponse = Message<"utila.auth.v1.GetUserInfoForMFAResponse"> & {
  /**
   * The user's ID.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The user's email address.
   *
   * @generated from field: string email = 2;
   */
  email: string;

  /**
   * Whether the user has a device.
   *
   * @generated from field: bool has_device = 3;
   */
  hasDevice: boolean;

  /**
   * Whether the user has a device with the given fingerprint.
   *
   * @generated from field: bool has_current_device = 4;
   */
  hasCurrentDevice: boolean;

  /**
   * Whether the user has a passkey.
   *
   * @generated from field: bool has_passkey = 5;
   */
  hasPasskey: boolean;

  /**
   * The backup hint, if the user has a personal backup.
   *
   * @generated from field: string backup_hint = 6;
   */
  backupHint: string;

  /**
   * The backup encryption details, if the user has a personal backup.
   *
   * @generated from field: utila.api.v1.EncryptionDetails backup_encryption_details = 7;
   */
  backupEncryptionDetails?: EncryptionDetails;

  /**
   * An access token for the user, if the user has MFA disabled.
   *
   * @generated from field: string access_token = 8;
   */
  accessToken: string;
};

/**
 * Describes the message utila.auth.v1.GetUserInfoForMFAResponse.
 * Use `create(GetUserInfoForMFAResponseSchema)` to create a new message.
 */
export const GetUserInfoForMFAResponseSchema: GenMessage<GetUserInfoForMFAResponse> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 5);

/**
 * @generated from message utila.auth.v1.ClientPlatform
 */
export type ClientPlatform = Message<"utila.auth.v1.ClientPlatform"> & {
};

/**
 * Describes the message utila.auth.v1.ClientPlatform.
 * Use `create(ClientPlatformSchema)` to create a new message.
 */
export const ClientPlatformSchema: GenMessage<ClientPlatform> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 6);

/**
 * @generated from enum utila.auth.v1.ClientPlatform.Enum
 */
export enum ClientPlatform_Enum {
  /**
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: CONSOLE = 1;
   */
  CONSOLE = 1,

  /**
   * @generated from enum value: MOBILE = 2;
   */
  MOBILE = 2,

  /**
   * @generated from enum value: CLI = 3;
   */
  CLI = 3,

  /**
   * @generated from enum value: EXTENSION = 4;
   */
  EXTENSION = 4,
}

/**
 * Describes the enum utila.auth.v1.ClientPlatform.Enum.
 */
export const ClientPlatform_EnumSchema: GenEnum<ClientPlatform_Enum> = /*@__PURE__*/
  enumDesc(file_utila_auth_v1_auth, 6, 0);

/**
 * @generated from message utila.auth.v1.BeginMFALoginRequest
 */
export type BeginMFALoginRequest = Message<"utila.auth.v1.BeginMFALoginRequest"> & {
  /**
   * The method to use for MFA.
   *
   * @generated from field: utila.auth.v1.BeginMFALoginRequest.MFAMethod.Enum method = 1;
   */
  method: BeginMFALoginRequest_MFAMethod_Enum;

  /**
   * The platform from which the login is initiated.
   *
   * @generated from field: utila.auth.v1.ClientPlatform.Enum client_platform = 2;
   */
  clientPlatform: ClientPlatform_Enum;
};

/**
 * Describes the message utila.auth.v1.BeginMFALoginRequest.
 * Use `create(BeginMFALoginRequestSchema)` to create a new message.
 */
export const BeginMFALoginRequestSchema: GenMessage<BeginMFALoginRequest> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 7);

/**
 * @generated from message utila.auth.v1.BeginMFALoginRequest.MFAMethod
 */
export type BeginMFALoginRequest_MFAMethod = Message<"utila.auth.v1.BeginMFALoginRequest.MFAMethod"> & {
};

/**
 * Describes the message utila.auth.v1.BeginMFALoginRequest.MFAMethod.
 * Use `create(BeginMFALoginRequest_MFAMethodSchema)` to create a new message.
 */
export const BeginMFALoginRequest_MFAMethodSchema: GenMessage<BeginMFALoginRequest_MFAMethod> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 7, 0);

/**
 * @generated from enum utila.auth.v1.BeginMFALoginRequest.MFAMethod.Enum
 */
export enum BeginMFALoginRequest_MFAMethod_Enum {
  /**
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Use current device approval for MFA.
   *
   * @generated from enum value: CURRENT_DEVICE_APPROVAL = 1;
   */
  CURRENT_DEVICE_APPROVAL = 1,

  /**
   * Use a device approval for MFA.
   *
   * @generated from enum value: DEVICE_APPROVAL = 2;
   */
  DEVICE_APPROVAL = 2,

  /**
   * Use a passkey for MFA.
   *
   * @generated from enum value: PASSKEY = 3;
   */
  PASSKEY = 3,

  /**
   * Use personal backup for MFA.
   *
   * @generated from enum value: PERSONAL_BACKUP = 4;
   */
  PERSONAL_BACKUP = 4,
}

/**
 * Describes the enum utila.auth.v1.BeginMFALoginRequest.MFAMethod.Enum.
 */
export const BeginMFALoginRequest_MFAMethod_EnumSchema: GenEnum<BeginMFALoginRequest_MFAMethod_Enum> = /*@__PURE__*/
  enumDesc(file_utila_auth_v1_auth, 7, 0, 0);

/**
 * @generated from message utila.auth.v1.BeginMFALoginResponse
 */
export type BeginMFALoginResponse = Message<"utila.auth.v1.BeginMFALoginResponse"> & {
  /**
   * The ID of the login, to be used for identifying the login.
   *
   * @generated from field: string login_id = 1;
   */
  loginId: string;

  /**
   * The login secret to be used in FinishMFALogin for verifying the counter party of the pending login.
   *
   * @generated from field: string login_secret = 2;
   */
  loginSecret: string;

  /**
   * JSON to be passed to navigator.credentials.get if the user chooses to use passkey for MFA.
   * The JSON mainly contains the challenge and parameters for the credential manager,
   * the challenge and info about the relying party.
   * https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/get#publickey_object_structure
   *
   * @generated from field: string passkeys_request_json = 3;
   */
  passkeysRequestJson: string;
};

/**
 * Describes the message utila.auth.v1.BeginMFALoginResponse.
 * Use `create(BeginMFALoginResponseSchema)` to create a new message.
 */
export const BeginMFALoginResponseSchema: GenMessage<BeginMFALoginResponse> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 8);

/**
 * @generated from message utila.auth.v1.FinishMFALoginRequest
 */
export type FinishMFALoginRequest = Message<"utila.auth.v1.FinishMFALoginRequest"> & {
  /**
   * The ID of the login, as returned by BeginMFALogin.
   *
   * @generated from field: string login_id = 1;
   */
  loginId: string;

  /**
   * The login secret, as returned by BeginMFALogin.
   *
   * @generated from field: string login_secret = 2;
   */
  loginSecret: string;

  /**
   * The response for the challenge that was given in BeginMFALogin.
   * The response depends on the method used for the MFA login:
   * 1. If the method is CURRENT_DEVICE_APPROVAL, the response should be a JWT signed by the user's device.
   * 2. If the method is DEVICE_APPROVAL, no response is needed, as the approval is done by a 3rd party device.
   * 3. If the method is PASSKEY, the response should be the JSON returned by navigator.credentials.get.
   *
   * @generated from oneof utila.auth.v1.FinishMFALoginRequest.response
   */
  response: {
    /**
     * A JWT, signed using user device's private key, to approve the login.
     * The JWT claims should be of the following structure: {"login_id": "<login-id>"}
     *
     * @generated from field: string approval_jwt = 3;
     */
    value: string;
    case: "approvalJwt";
  } | {
    /**
     * The JSON returned by navigator.credentials.get.
     * The JSON mainly contains the signed challenge.
     * https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential
     *
     * @generated from field: string passkey_response_json = 4;
     */
    value: string;
    case: "passkeyResponseJson";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message utila.auth.v1.FinishMFALoginRequest.
 * Use `create(FinishMFALoginRequestSchema)` to create a new message.
 */
export const FinishMFALoginRequestSchema: GenMessage<FinishMFALoginRequest> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 9);

/**
 * @generated from message utila.auth.v1.FinishMFALoginResponse
 */
export type FinishMFALoginResponse = Message<"utila.auth.v1.FinishMFALoginResponse"> & {
  /**
   * The JWT to be used to authenticate the user with the API.
   * If the access token is empty, the flow is not yet complete.
   *
   * @generated from field: string mfa_access_token = 1;
   */
  mfaAccessToken: string;

  /**
   * The refresh token to be used to refresh the access token.
   * If the refresh token is empty, the flow is not yet complete.
   *
   * @generated from field: string mfa_refresh_token = 2;
   */
  mfaRefreshToken: string;
};

/**
 * Describes the message utila.auth.v1.FinishMFALoginResponse.
 * Use `create(FinishMFALoginResponseSchema)` to create a new message.
 */
export const FinishMFALoginResponseSchema: GenMessage<FinishMFALoginResponse> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 10);

/**
 * @generated from message utila.auth.v1.CancelMFALoginRequest
 */
export type CancelMFALoginRequest = Message<"utila.auth.v1.CancelMFALoginRequest"> & {
  /**
   * The ID of the login, as returned by BeginMFALogin.
   *
   * @generated from field: string login_id = 1;
   */
  loginId: string;

  /**
   * The login secret, as returned by BeginMFALogin.
   *
   * @generated from field: string login_secret = 2;
   */
  loginSecret: string;
};

/**
 * Describes the message utila.auth.v1.CancelMFALoginRequest.
 * Use `create(CancelMFALoginRequestSchema)` to create a new message.
 */
export const CancelMFALoginRequestSchema: GenMessage<CancelMFALoginRequest> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 11);

/**
 * @generated from message utila.auth.v1.CancelMFALoginResponse
 */
export type CancelMFALoginResponse = Message<"utila.auth.v1.CancelMFALoginResponse"> & {
};

/**
 * Describes the message utila.auth.v1.CancelMFALoginResponse.
 * Use `create(CancelMFALoginResponseSchema)` to create a new message.
 */
export const CancelMFALoginResponseSchema: GenMessage<CancelMFALoginResponse> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 12);

/**
 * @generated from message utila.auth.v1.CreateFirstUserDeviceRequest
 */
export type CreateFirstUserDeviceRequest = Message<"utila.auth.v1.CreateFirstUserDeviceRequest"> & {
  /**
   * The user device to create.
   *
   * @generated from field: utila.api.v1.UserDevice device = 3;
   */
  device?: UserDevice;
};

/**
 * Describes the message utila.auth.v1.CreateFirstUserDeviceRequest.
 * Use `create(CreateFirstUserDeviceRequestSchema)` to create a new message.
 */
export const CreateFirstUserDeviceRequestSchema: GenMessage<CreateFirstUserDeviceRequest> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 13);

/**
 * @generated from message utila.auth.v1.CreateFirstUserDeviceResponse
 */
export type CreateFirstUserDeviceResponse = Message<"utila.auth.v1.CreateFirstUserDeviceResponse"> & {
};

/**
 * Describes the message utila.auth.v1.CreateFirstUserDeviceResponse.
 * Use `create(CreateFirstUserDeviceResponseSchema)` to create a new message.
 */
export const CreateFirstUserDeviceResponseSchema: GenMessage<CreateFirstUserDeviceResponse> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 14);

/**
 * @generated from message utila.auth.v1.MFALogin
 */
export type MFALogin = Message<"utila.auth.v1.MFALogin"> & {
  /**
   * The ID of the pending login.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The IP address of the pending login.
   *
   * @generated from field: string ip_address = 5;
   */
  ipAddress: string;

  /**
   * The user agent of the pending login.
   *
   * @generated from field: string user_agent = 4;
   */
  userAgent: string;

  /**
   * The platform from which the MFA login was initiated.
   *
   * @generated from field: utila.auth.v1.ClientPlatform.Enum client_platform = 7;
   */
  clientPlatform: ClientPlatform_Enum;

  /**
   * The location of the pending login.
   *
   * @generated from field: string location = 6;
   */
  location: string;

  /**
   * The time the pending login was created.
   *
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * The time the pending login will expire.
   *
   * @generated from field: google.protobuf.Timestamp expires_at = 3;
   */
  expiresAt?: Timestamp;
};

/**
 * Describes the message utila.auth.v1.MFALogin.
 * Use `create(MFALoginSchema)` to create a new message.
 */
export const MFALoginSchema: GenMessage<MFALogin> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 15);

/**
 * @generated from message utila.auth.v1.GetPendingDeviceApprovalMFALoginRequest
 */
export type GetPendingDeviceApprovalMFALoginRequest = Message<"utila.auth.v1.GetPendingDeviceApprovalMFALoginRequest"> & {
  /**
   * The ID of the pending login to get.
   *
   * @generated from field: string login_id = 1;
   */
  loginId: string;
};

/**
 * Describes the message utila.auth.v1.GetPendingDeviceApprovalMFALoginRequest.
 * Use `create(GetPendingDeviceApprovalMFALoginRequestSchema)` to create a new message.
 */
export const GetPendingDeviceApprovalMFALoginRequestSchema: GenMessage<GetPendingDeviceApprovalMFALoginRequest> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 16);

/**
 * @generated from message utila.auth.v1.GetPendingDeviceApprovalMFALoginResponse
 */
export type GetPendingDeviceApprovalMFALoginResponse = Message<"utila.auth.v1.GetPendingDeviceApprovalMFALoginResponse"> & {
  /**
   * The pending login.
   *
   * @generated from field: utila.auth.v1.MFALogin login = 1;
   */
  login?: MFALogin;
};

/**
 * Describes the message utila.auth.v1.GetPendingDeviceApprovalMFALoginResponse.
 * Use `create(GetPendingDeviceApprovalMFALoginResponseSchema)` to create a new message.
 */
export const GetPendingDeviceApprovalMFALoginResponseSchema: GenMessage<GetPendingDeviceApprovalMFALoginResponse> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 17);

/**
 * @generated from message utila.auth.v1.ListPendingDeviceApprovalMFALoginsRequest
 */
export type ListPendingDeviceApprovalMFALoginsRequest = Message<"utila.auth.v1.ListPendingDeviceApprovalMFALoginsRequest"> & {
};

/**
 * Describes the message utila.auth.v1.ListPendingDeviceApprovalMFALoginsRequest.
 * Use `create(ListPendingDeviceApprovalMFALoginsRequestSchema)` to create a new message.
 */
export const ListPendingDeviceApprovalMFALoginsRequestSchema: GenMessage<ListPendingDeviceApprovalMFALoginsRequest> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 18);

/**
 * @generated from message utila.auth.v1.ListPendingDeviceApprovalMFALoginsResponse
 */
export type ListPendingDeviceApprovalMFALoginsResponse = Message<"utila.auth.v1.ListPendingDeviceApprovalMFALoginsResponse"> & {
  /**
   * @generated from field: repeated utila.auth.v1.MFALogin logins = 1;
   */
  logins: MFALogin[];
};

/**
 * Describes the message utila.auth.v1.ListPendingDeviceApprovalMFALoginsResponse.
 * Use `create(ListPendingDeviceApprovalMFALoginsResponseSchema)` to create a new message.
 */
export const ListPendingDeviceApprovalMFALoginsResponseSchema: GenMessage<ListPendingDeviceApprovalMFALoginsResponse> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 19);

/**
 * @generated from message utila.auth.v1.CompletePendingDeviceApprovalMFALoginRequest
 */
export type CompletePendingDeviceApprovalMFALoginRequest = Message<"utila.auth.v1.CompletePendingDeviceApprovalMFALoginRequest"> & {
  /**
   * The ID of the pending login to approve or reject.
   *
   * @generated from field: string login_id = 1;
   */
  loginId: string;

  /**
   * A JWT, signed using user device's private key, to approve the login.
   * The JWT claims should be of the following structure: {"login_id": "<login-id>"}
   * The approval JWT is optional. If it is not provided, the login will be rejected.
   *
   * @generated from field: string approval_jwt = 2;
   */
  approvalJwt: string;
};

/**
 * Describes the message utila.auth.v1.CompletePendingDeviceApprovalMFALoginRequest.
 * Use `create(CompletePendingDeviceApprovalMFALoginRequestSchema)` to create a new message.
 */
export const CompletePendingDeviceApprovalMFALoginRequestSchema: GenMessage<CompletePendingDeviceApprovalMFALoginRequest> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 20);

/**
 * @generated from message utila.auth.v1.CompletePendingDeviceApprovalMFALoginResponse
 */
export type CompletePendingDeviceApprovalMFALoginResponse = Message<"utila.auth.v1.CompletePendingDeviceApprovalMFALoginResponse"> & {
};

/**
 * Describes the message utila.auth.v1.CompletePendingDeviceApprovalMFALoginResponse.
 * Use `create(CompletePendingDeviceApprovalMFALoginResponseSchema)` to create a new message.
 */
export const CompletePendingDeviceApprovalMFALoginResponseSchema: GenMessage<CompletePendingDeviceApprovalMFALoginResponse> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 21);

/**
 * A token to get an access token is passed in a cookie.
 *
 * @generated from message utila.auth.v1.GetTokenRequest
 */
export type GetTokenRequest = Message<"utila.auth.v1.GetTokenRequest"> & {
};

/**
 * Describes the message utila.auth.v1.GetTokenRequest.
 * Use `create(GetTokenRequestSchema)` to create a new message.
 */
export const GetTokenRequestSchema: GenMessage<GetTokenRequest> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 22);

/**
 * @generated from message utila.auth.v1.GetTokenResponse
 */
export type GetTokenResponse = Message<"utila.auth.v1.GetTokenResponse"> & {
  /**
   * An access token.
   *
   * @generated from field: string access_token = 1;
   */
  accessToken: string;

  /**
   * User's email address.
   *
   * @generated from field: string user_email = 2;
   */
  userEmail: string;
};

/**
 * Describes the message utila.auth.v1.GetTokenResponse.
 * Use `create(GetTokenResponseSchema)` to create a new message.
 */
export const GetTokenResponseSchema: GenMessage<GetTokenResponse> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 23);

/**
 * @generated from message utila.auth.v1.GetChallengeForAuthenticationRequest
 */
export type GetChallengeForAuthenticationRequest = Message<"utila.auth.v1.GetChallengeForAuthenticationRequest"> & {
};

/**
 * Describes the message utila.auth.v1.GetChallengeForAuthenticationRequest.
 * Use `create(GetChallengeForAuthenticationRequestSchema)` to create a new message.
 */
export const GetChallengeForAuthenticationRequestSchema: GenMessage<GetChallengeForAuthenticationRequest> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 24);

/**
 * @generated from message utila.auth.v1.GetChallengeForAuthenticationResponse
 */
export type GetChallengeForAuthenticationResponse = Message<"utila.auth.v1.GetChallengeForAuthenticationResponse"> & {
  /**
   * The challenge to be signed by the user's device.
   *
   * @generated from field: string challenge = 1;
   */
  challenge: string;
};

/**
 * Describes the message utila.auth.v1.GetChallengeForAuthenticationResponse.
 * Use `create(GetChallengeForAuthenticationResponseSchema)` to create a new message.
 */
export const GetChallengeForAuthenticationResponseSchema: GenMessage<GetChallengeForAuthenticationResponse> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 25);

/**
 * A token to get an access token is passed in the authorization header.
 *
 * @generated from message utila.auth.v1.RefreshTokenRequest
 */
export type RefreshTokenRequest = Message<"utila.auth.v1.RefreshTokenRequest"> & {
};

/**
 * Describes the message utila.auth.v1.RefreshTokenRequest.
 * Use `create(RefreshTokenRequestSchema)` to create a new message.
 */
export const RefreshTokenRequestSchema: GenMessage<RefreshTokenRequest> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 26);

/**
 * @generated from message utila.auth.v1.RefreshTokenResponse
 */
export type RefreshTokenResponse = Message<"utila.auth.v1.RefreshTokenResponse"> & {
  /**
   * The next refresh token.
   *
   * @generated from field: string next_refresh_token = 1;
   */
  nextRefreshToken: string;

  /**
   * An access token.
   *
   * @generated from field: string access_token = 2;
   */
  accessToken: string;
};

/**
 * Describes the message utila.auth.v1.RefreshTokenResponse.
 * Use `create(RefreshTokenResponseSchema)` to create a new message.
 */
export const RefreshTokenResponseSchema: GenMessage<RefreshTokenResponse> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 27);

/**
 * A token to get an access token is passed in a cookie.
 *
 * @generated from message utila.auth.v1.RefreshTokenFromCookieRequest
 */
export type RefreshTokenFromCookieRequest = Message<"utila.auth.v1.RefreshTokenFromCookieRequest"> & {
};

/**
 * Describes the message utila.auth.v1.RefreshTokenFromCookieRequest.
 * Use `create(RefreshTokenFromCookieRequestSchema)` to create a new message.
 */
export const RefreshTokenFromCookieRequestSchema: GenMessage<RefreshTokenFromCookieRequest> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 28);

/**
 * @generated from message utila.auth.v1.RefreshTokenFromCookieResponse
 */
export type RefreshTokenFromCookieResponse = Message<"utila.auth.v1.RefreshTokenFromCookieResponse"> & {
  /**
   * An access token.
   *
   * @generated from field: string access_token = 1;
   */
  accessToken: string;

  /**
   * User's email address.
   *
   * @generated from field: string user_email = 2;
   */
  userEmail: string;
};

/**
 * Describes the message utila.auth.v1.RefreshTokenFromCookieResponse.
 * Use `create(RefreshTokenFromCookieResponseSchema)` to create a new message.
 */
export const RefreshTokenFromCookieResponseSchema: GenMessage<RefreshTokenFromCookieResponse> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 29);

/**
 * @generated from message utila.auth.v1.RefreshTokenForUserDeviceRequest
 */
export type RefreshTokenForUserDeviceRequest = Message<"utila.auth.v1.RefreshTokenForUserDeviceRequest"> & {
  /**
   * The token is signed by the user's device private key and is used to identify the user's device.
   *
   * @generated from field: string signed_challenge_token = 1;
   */
  signedChallengeToken: string;
};

/**
 * Describes the message utila.auth.v1.RefreshTokenForUserDeviceRequest.
 * Use `create(RefreshTokenForUserDeviceRequestSchema)` to create a new message.
 */
export const RefreshTokenForUserDeviceRequestSchema: GenMessage<RefreshTokenForUserDeviceRequest> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 30);

/**
 * @generated from message utila.auth.v1.RefreshTokenForUserDeviceResponse
 */
export type RefreshTokenForUserDeviceResponse = Message<"utila.auth.v1.RefreshTokenForUserDeviceResponse"> & {
  /**
   * An access token.
   *
   * @generated from field: string access_token = 1;
   */
  accessToken: string;

  /**
   * The next refresh token.
   *
   * @generated from field: string next_refresh_token = 2;
   */
  nextRefreshToken: string;
};

/**
 * Describes the message utila.auth.v1.RefreshTokenForUserDeviceResponse.
 * Use `create(RefreshTokenForUserDeviceResponseSchema)` to create a new message.
 */
export const RefreshTokenForUserDeviceResponseSchema: GenMessage<RefreshTokenForUserDeviceResponse> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 31);

/**
 * @generated from message utila.auth.v1.LogoutRequest
 */
export type LogoutRequest = Message<"utila.auth.v1.LogoutRequest"> & {
};

/**
 * Describes the message utila.auth.v1.LogoutRequest.
 * Use `create(LogoutRequestSchema)` to create a new message.
 */
export const LogoutRequestSchema: GenMessage<LogoutRequest> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 32);

/**
 * @generated from message utila.auth.v1.LogoutResponse
 */
export type LogoutResponse = Message<"utila.auth.v1.LogoutResponse"> & {
};

/**
 * Describes the message utila.auth.v1.LogoutResponse.
 * Use `create(LogoutResponseSchema)` to create a new message.
 */
export const LogoutResponseSchema: GenMessage<LogoutResponse> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 33);

/**
 * @generated from message utila.auth.v1.BeginSessionLoginRequest
 */
export type BeginSessionLoginRequest = Message<"utila.auth.v1.BeginSessionLoginRequest"> & {
  /**
   * The platform from which the login is initiated.
   *
   * @generated from field: utila.auth.v1.ClientPlatform.Enum client_platform = 1;
   */
  clientPlatform: ClientPlatform_Enum;
};

/**
 * Describes the message utila.auth.v1.BeginSessionLoginRequest.
 * Use `create(BeginSessionLoginRequestSchema)` to create a new message.
 */
export const BeginSessionLoginRequestSchema: GenMessage<BeginSessionLoginRequest> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 34);

/**
 * @generated from message utila.auth.v1.BeginSessionLoginResponse
 */
export type BeginSessionLoginResponse = Message<"utila.auth.v1.BeginSessionLoginResponse"> & {
  /**
   * The details of the login to be used in CompleteSessionLogin and FinishSessionLogin, to identify the login.
   * This token is signed by the server and should be passed to a connected client, which will use it to complete the login.
   *
   * @generated from field: string login_details_token = 1;
   */
  loginDetailsToken: string;

  /**
   * The login secret to be used in FinishSessionLogin for verifying the counter party of the pending login.
   * This token is signed by the server and should be used in FinishSessionLogin to verify the counter party of the pending login.
   *
   * @generated from field: string login_secret_token = 2;
   */
  loginSecretToken: string;
};

/**
 * Describes the message utila.auth.v1.BeginSessionLoginResponse.
 * Use `create(BeginSessionLoginResponseSchema)` to create a new message.
 */
export const BeginSessionLoginResponseSchema: GenMessage<BeginSessionLoginResponse> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 35);

/**
 * @generated from message utila.auth.v1.FinishSessionLoginRequest
 */
export type FinishSessionLoginRequest = Message<"utila.auth.v1.FinishSessionLoginRequest"> & {
  /**
   * The details of the login, as returned by BeginSessionLogin.
   *
   * @generated from field: string login_details_token = 1;
   */
  loginDetailsToken: string;

  /**
   * The login secret to be used for verifying the counter party of the pending login, as returned by BeginSessionLogin.
   *
   * @generated from field: string login_secret_token = 2;
   */
  loginSecretToken: string;
};

/**
 * Describes the message utila.auth.v1.FinishSessionLoginRequest.
 * Use `create(FinishSessionLoginRequestSchema)` to create a new message.
 */
export const FinishSessionLoginRequestSchema: GenMessage<FinishSessionLoginRequest> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 36);

/**
 * @generated from message utila.auth.v1.FinishSessionLoginResponse
 */
export type FinishSessionLoginResponse = Message<"utila.auth.v1.FinishSessionLoginResponse"> & {
  /**
   * The JWT to be used to authenticate the user with the API.
   * If the access token is empty, the flow is not yet complete.
   *
   * @generated from field: string access_token = 1;
   */
  accessToken: string;

  /**
   * The refresh token to be used to refresh the access token.
   * If the refresh token is empty, the flow is not yet complete.
   *
   * @generated from field: string refresh_token = 2;
   */
  refreshToken: string;
};

/**
 * Describes the message utila.auth.v1.FinishSessionLoginResponse.
 * Use `create(FinishSessionLoginResponseSchema)` to create a new message.
 */
export const FinishSessionLoginResponseSchema: GenMessage<FinishSessionLoginResponse> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 37);

/**
 * @generated from message utila.auth.v1.CompletePendingSessionLoginRequest
 */
export type CompletePendingSessionLoginRequest = Message<"utila.auth.v1.CompletePendingSessionLoginRequest"> & {
  /**
   * The details of the login, as returned by BeginSessionLogin.
   *
   * @generated from field: string login_details_token = 1;
   */
  loginDetailsToken: string;

  /**
   * Whether to approve or reject the login.
   *
   * @generated from field: bool approve = 2;
   */
  approve: boolean;
};

/**
 * Describes the message utila.auth.v1.CompletePendingSessionLoginRequest.
 * Use `create(CompletePendingSessionLoginRequestSchema)` to create a new message.
 */
export const CompletePendingSessionLoginRequestSchema: GenMessage<CompletePendingSessionLoginRequest> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 38);

/**
 * @generated from message utila.auth.v1.CompletePendingSessionLoginResponse
 */
export type CompletePendingSessionLoginResponse = Message<"utila.auth.v1.CompletePendingSessionLoginResponse"> & {
};

/**
 * Describes the message utila.auth.v1.CompletePendingSessionLoginResponse.
 * Use `create(CompletePendingSessionLoginResponseSchema)` to create a new message.
 */
export const CompletePendingSessionLoginResponseSchema: GenMessage<CompletePendingSessionLoginResponse> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 39);

/**
 * @generated from message utila.auth.v1.WebAuthnCredential
 */
export type WebAuthnCredential = Message<"utila.auth.v1.WebAuthnCredential"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 3;
   */
  createdAt?: Timestamp;
};

/**
 * Describes the message utila.auth.v1.WebAuthnCredential.
 * Use `create(WebAuthnCredentialSchema)` to create a new message.
 */
export const WebAuthnCredentialSchema: GenMessage<WebAuthnCredential> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 40);

/**
 * @generated from message utila.auth.v1.ListWebAuthnCredentialsRequest
 */
export type ListWebAuthnCredentialsRequest = Message<"utila.auth.v1.ListWebAuthnCredentialsRequest"> & {
};

/**
 * Describes the message utila.auth.v1.ListWebAuthnCredentialsRequest.
 * Use `create(ListWebAuthnCredentialsRequestSchema)` to create a new message.
 */
export const ListWebAuthnCredentialsRequestSchema: GenMessage<ListWebAuthnCredentialsRequest> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 41);

/**
 * @generated from message utila.auth.v1.ListWebAuthnCredentialsResponse
 */
export type ListWebAuthnCredentialsResponse = Message<"utila.auth.v1.ListWebAuthnCredentialsResponse"> & {
  /**
   * @generated from field: repeated utila.auth.v1.WebAuthnCredential credentials = 1;
   */
  credentials: WebAuthnCredential[];
};

/**
 * Describes the message utila.auth.v1.ListWebAuthnCredentialsResponse.
 * Use `create(ListWebAuthnCredentialsResponseSchema)` to create a new message.
 */
export const ListWebAuthnCredentialsResponseSchema: GenMessage<ListWebAuthnCredentialsResponse> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 42);

/**
 * @generated from message utila.auth.v1.DeleteWebAuthnCredentialRequest
 */
export type DeleteWebAuthnCredentialRequest = Message<"utila.auth.v1.DeleteWebAuthnCredentialRequest"> & {
  /**
   * @generated from field: string credential_id = 1;
   */
  credentialId: string;
};

/**
 * Describes the message utila.auth.v1.DeleteWebAuthnCredentialRequest.
 * Use `create(DeleteWebAuthnCredentialRequestSchema)` to create a new message.
 */
export const DeleteWebAuthnCredentialRequestSchema: GenMessage<DeleteWebAuthnCredentialRequest> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 43);

/**
 * @generated from message utila.auth.v1.RenameWebAuthnCredentialRequest
 */
export type RenameWebAuthnCredentialRequest = Message<"utila.auth.v1.RenameWebAuthnCredentialRequest"> & {
  /**
   * @generated from field: string credential_id = 1;
   */
  credentialId: string;

  /**
   * @generated from field: string new_name = 2;
   */
  newName: string;
};

/**
 * Describes the message utila.auth.v1.RenameWebAuthnCredentialRequest.
 * Use `create(RenameWebAuthnCredentialRequestSchema)` to create a new message.
 */
export const RenameWebAuthnCredentialRequestSchema: GenMessage<RenameWebAuthnCredentialRequest> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 44);

/**
 * @generated from message utila.auth.v1.BeginAddWebAuthnCredentialRequest
 */
export type BeginAddWebAuthnCredentialRequest = Message<"utila.auth.v1.BeginAddWebAuthnCredentialRequest"> & {
};

/**
 * Describes the message utila.auth.v1.BeginAddWebAuthnCredentialRequest.
 * Use `create(BeginAddWebAuthnCredentialRequestSchema)` to create a new message.
 */
export const BeginAddWebAuthnCredentialRequestSchema: GenMessage<BeginAddWebAuthnCredentialRequest> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 45);

/**
 * @generated from message utila.auth.v1.BeginAddWebAuthnCredentialResponse
 */
export type BeginAddWebAuthnCredentialResponse = Message<"utila.auth.v1.BeginAddWebAuthnCredentialResponse"> & {
  /**
   * The session ID to be used in FinishAddWebAuthnCredentialRequest for identifying the session.
   *
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * JSON to be passed to navigator.credentials.create.
   * The JSON mainly contains the parameters for the authenticator (attestation and public key params),
   * the challenge and info about the user and the relying party.
   * https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/create#publickey_object_structure
   *
   * @generated from field: string credential_options_request_json = 3;
   */
  credentialOptionsRequestJson: string;
};

/**
 * Describes the message utila.auth.v1.BeginAddWebAuthnCredentialResponse.
 * Use `create(BeginAddWebAuthnCredentialResponseSchema)` to create a new message.
 */
export const BeginAddWebAuthnCredentialResponseSchema: GenMessage<BeginAddWebAuthnCredentialResponse> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 46);

/**
 * @generated from message utila.auth.v1.FinishAddWebAuthnCredentialRequest
 */
export type FinishAddWebAuthnCredentialRequest = Message<"utila.auth.v1.FinishAddWebAuthnCredentialRequest"> & {
  /**
   * The ID of the session, as returned by BeginAddWebAuthnCredentialResponse.
   *
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * The JSON returned by navigator.credentials.create.
   * The JSON mainly contains the signed challenge, the public key and the authenticator's attestation.
   * https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential
   *
   * @generated from field: string credential_options_response_json = 2;
   */
  credentialOptionsResponseJson: string;

  /**
   * The friendly name to be used for the credential, relvant only for the registration flow.
   *
   * @generated from field: string credential_name = 3;
   */
  credentialName: string;
};

/**
 * Describes the message utila.auth.v1.FinishAddWebAuthnCredentialRequest.
 * Use `create(FinishAddWebAuthnCredentialRequestSchema)` to create a new message.
 */
export const FinishAddWebAuthnCredentialRequestSchema: GenMessage<FinishAddWebAuthnCredentialRequest> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 47);

/**
 * @generated from message utila.auth.v1.FinishAddWebAuthnCredentialResponse
 */
export type FinishAddWebAuthnCredentialResponse = Message<"utila.auth.v1.FinishAddWebAuthnCredentialResponse"> & {
};

/**
 * Describes the message utila.auth.v1.FinishAddWebAuthnCredentialResponse.
 * Use `create(FinishAddWebAuthnCredentialResponseSchema)` to create a new message.
 */
export const FinishAddWebAuthnCredentialResponseSchema: GenMessage<FinishAddWebAuthnCredentialResponse> = /*@__PURE__*/
  messageDesc(file_utila_auth_v1_auth, 48);

/**
 *
 * MFA Login Flow Endpoints
 *
 *
 * @generated from service utila.auth.v1.AuthService
 */
export const AuthService: GenService<{
  /**
   * Deprecated: Use BeginMFALogin instead.
   * Begin a WebAuthn flow, either a registration flow or a login flow, depending if the user has any credentials.
   * Called during the Auth0 login flow.
   *
   * @generated from rpc utila.auth.v1.AuthService.BeginWebAuthnFlow
   */
  beginWebAuthnFlow: {
    methodKind: "unary";
    input: typeof BeginWebAuthnFlowRequestSchema;
    output: typeof BeginWebAuthnFlowResponseSchema;
  },
  /**
   * Deprecated: Use FinishMFALogin instead.
   * Finish a WebAuthn flow, either a registration flow or a login flow.
   * Called during the Auth0 login flow.
   *
   * @generated from rpc utila.auth.v1.AuthService.FinishWebAuthnFlow
   */
  finishWebAuthnFlow: {
    methodKind: "unary";
    input: typeof FinishWebAuthnFlowRequestSchema;
    output: typeof FinishWebAuthnFlowResponseSchema;
  },
  /**
   * @generated from rpc utila.auth.v1.AuthService.GetUserInfoForMFA
   */
  getUserInfoForMFA: {
    methodKind: "unary";
    input: typeof GetUserInfoForMFARequestSchema;
    output: typeof GetUserInfoForMFAResponseSchema;
  },
  /**
   * Begin a login flow.
   * Can be called by a user who has not yet completed MFA.
   *
   * @generated from rpc utila.auth.v1.AuthService.BeginMFALogin
   */
  beginMFALogin: {
    methodKind: "unary";
    input: typeof BeginMFALoginRequestSchema;
    output: typeof BeginMFALoginResponseSchema;
  },
  /**
   * Finish a login flow.
   * Can be called by a user who has not yet completed MFA.
   *
   * @generated from rpc utila.auth.v1.AuthService.FinishMFALogin
   */
  finishMFALogin: {
    methodKind: "unary";
    input: typeof FinishMFALoginRequestSchema;
    output: typeof FinishMFALoginResponseSchema;
  },
  /**
   * @generated from rpc utila.auth.v1.AuthService.CancelMFALogin
   */
  cancelMFALogin: {
    methodKind: "unary";
    input: typeof CancelMFALoginRequestSchema;
    output: typeof CancelMFALoginResponseSchema;
  },
  /**
   * TODO: Consider moving this endpoint to the API service.
   * Create the first user device for a user.
   * Can be called by a user who has not yet completed MFA.
   * Calling this endpoint when user already has a device will result in an error and an alert.
   *
   * @generated from rpc utila.auth.v1.AuthService.CreateFirstUserDevice
   */
  createFirstUserDevice: {
    methodKind: "unary";
    input: typeof CreateFirstUserDeviceRequestSchema;
    output: typeof CreateFirstUserDeviceResponseSchema;
  },
  /**
   * Get a specific MFA login of the current user that is pending a device approval.
   * Can be called by an authenticated user.
   *
   * @generated from rpc utila.auth.v1.AuthService.GetPendingDeviceApprovalMFALogin
   */
  getPendingDeviceApprovalMFALogin: {
    methodKind: "unary";
    input: typeof GetPendingDeviceApprovalMFALoginRequestSchema;
    output: typeof GetPendingDeviceApprovalMFALoginResponseSchema;
  },
  /**
   * List the MFA logins of the current user pending a device approval.
   * Can be called by an authenticated user.
   *
   * @generated from rpc utila.auth.v1.AuthService.ListPendingDeviceApprovalMFALogins
   */
  listPendingDeviceApprovalMFALogins: {
    methodKind: "unary";
    input: typeof ListPendingDeviceApprovalMFALoginsRequestSchema;
    output: typeof ListPendingDeviceApprovalMFALoginsResponseSchema;
  },
  /**
   * Complete an MFA login of the current user pending a device approval.
   * Can be called by an authenticated user.
   *
   * @generated from rpc utila.auth.v1.AuthService.CompletePendingDeviceApprovalMFALogin
   */
  completePendingDeviceApprovalMFALogin: {
    methodKind: "unary";
    input: typeof CompletePendingDeviceApprovalMFALoginRequestSchema;
    output: typeof CompletePendingDeviceApprovalMFALoginResponseSchema;
  },
  /**
   * Get a token for a user.
   *
   * @generated from rpc utila.auth.v1.AuthService.GetToken
   */
  getToken: {
    methodKind: "unary";
    input: typeof GetTokenRequestSchema;
    output: typeof GetTokenResponseSchema;
  },
  /**
   * Logout a user, by deleting the user's http-only token cookie.
   *
   * @generated from rpc utila.auth.v1.AuthService.Logout
   */
  logout: {
    methodKind: "unary";
    input: typeof LogoutRequestSchema;
    output: typeof LogoutResponseSchema;
  },
  /**
   * @generated from rpc utila.auth.v1.AuthService.GetChallengeForAuthentication
   */
  getChallengeForAuthentication: {
    methodKind: "unary";
    input: typeof GetChallengeForAuthenticationRequestSchema;
    output: typeof GetChallengeForAuthenticationResponseSchema;
  },
  /**
   * Refresh token
   *
   * @generated from rpc utila.auth.v1.AuthService.RefreshToken
   */
  refreshToken: {
    methodKind: "unary";
    input: typeof RefreshTokenRequestSchema;
    output: typeof RefreshTokenResponseSchema;
  },
  /**
   * Refresh token (from a cookie).
   *
   * @generated from rpc utila.auth.v1.AuthService.RefreshTokenFromCookie
   */
  refreshTokenFromCookie: {
    methodKind: "unary";
    input: typeof RefreshTokenFromCookieRequestSchema;
    output: typeof RefreshTokenFromCookieResponseSchema;
  },
  /**
   * Refresh token (for a user device).
   *
   * @generated from rpc utila.auth.v1.AuthService.RefreshTokenForUserDevice
   */
  refreshTokenForUserDevice: {
    methodKind: "unary";
    input: typeof RefreshTokenForUserDeviceRequestSchema;
    output: typeof RefreshTokenForUserDeviceResponseSchema;
  },
  /**
   * @generated from rpc utila.auth.v1.AuthService.BeginSessionLogin
   */
  beginSessionLogin: {
    methodKind: "unary";
    input: typeof BeginSessionLoginRequestSchema;
    output: typeof BeginSessionLoginResponseSchema;
  },
  /**
   * @generated from rpc utila.auth.v1.AuthService.FinishSessionLogin
   */
  finishSessionLogin: {
    methodKind: "unary";
    input: typeof FinishSessionLoginRequestSchema;
    output: typeof FinishSessionLoginResponseSchema;
  },
  /**
   * @generated from rpc utila.auth.v1.AuthService.CompletePendingSessionLogin
   */
  completePendingSessionLogin: {
    methodKind: "unary";
    input: typeof CompletePendingSessionLoginRequestSchema;
    output: typeof CompletePendingSessionLoginResponseSchema;
  },
  /**
   * List the WebAuthn credentials for the current user.
   * Can be called by an authenticated user.
   *
   * @generated from rpc utila.auth.v1.AuthService.ListWebAuthnCredentials
   */
  listWebAuthnCredentials: {
    methodKind: "unary";
    input: typeof ListWebAuthnCredentialsRequestSchema;
    output: typeof ListWebAuthnCredentialsResponseSchema;
  },
  /**
   * Rename a WebAuthn credential.
   * Can be called by an authenticated user.
   *
   * @generated from rpc utila.auth.v1.AuthService.RenameWebAuthnCredential
   */
  renameWebAuthnCredential: {
    methodKind: "unary";
    input: typeof RenameWebAuthnCredentialRequestSchema;
    output: typeof WebAuthnCredentialSchema;
  },
  /**
   * Delete a WebAuthn credential.
   * Can be called by an authenticated user.
   *
   * @generated from rpc utila.auth.v1.AuthService.DeleteWebAuthnCredential
   */
  deleteWebAuthnCredential: {
    methodKind: "unary";
    input: typeof DeleteWebAuthnCredentialRequestSchema;
    output: typeof WebAuthnCredentialSchema;
  },
  /**
   * Begin a WebAuthn flow to add a credential.
   * Can be called by an authenticated user.
   *
   * @generated from rpc utila.auth.v1.AuthService.BeginAddWebAuthnCredential
   */
  beginAddWebAuthnCredential: {
    methodKind: "unary";
    input: typeof BeginAddWebAuthnCredentialRequestSchema;
    output: typeof BeginAddWebAuthnCredentialResponseSchema;
  },
  /**
   * Finish a WebAuthn flow to add a credential.
   * Can be called by an authenticated user.
   *
   * @generated from rpc utila.auth.v1.AuthService.FinishAddWebAuthnCredential
   */
  finishAddWebAuthnCredential: {
    methodKind: "unary";
    input: typeof FinishAddWebAuthnCredentialRequestSchema;
    output: typeof FinishAddWebAuthnCredentialResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_utila_auth_v1_auth, 0);

